#
# Copyright (C) 2024 Intel Corporation
#
# Part of the Unified-Runtime Project, under the Apache License v2.0 with LLVM Exceptions.
# See LICENSE.TXT
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Unified Runtime Experimental APIs for (kernel) Launch Properties"
ordinal: "99"
--- #--------------------------------------------------------------------------
type: macro
desc: "The extension string that defines support for the Launch Properties extension, which is returned when querying device extensions."
name: $X_LAUNCH_PROPERTIES_EXTENSION_STRING_EXP
value: "\"$x_exp_launch_properties\""
--- #--------------------------------------------------------------------------
type: enum
extend: true
desc: "Structure Type experimental enumerations."
name: $x_structure_type_t
etors:
    - name: EXP_LAUNCH_PROPERTIES_CLUSTER_DIMS
      desc: $x_exp_properties_dim3_t
      value: "0x5010"
    - name: EXP_LAUNCH_PROPERTIES_COOPERATIVE
      desc: $x_exp_properties_bool_t
      value: "0x5011"
    - name: EXP_BASE_DESC
      desc: $x_base_desc_t
      value: "0x5012"
--- #--------------------------------------------------------------------------
type: struct
desc: "Specifies a 3-dimension uint32_t value set property"
name: $x_exp_properties_dim3_t
base: $x_base_properties_t
members:
    - type: uint32_t
      name: x
      desc: "[in] x dimension size"
    - type: uint32_t
      name: y
      desc: "[in] y dimension size"
    - type: uint32_t
      name: z
      desc: "[in] z dimension size"
--- #--------------------------------------------------------------------------
type: struct
desc: "Specifies a boolean value property"
name: $x_exp_properties_bool_t
base: $x_base_properties_t
members:
    - type: ur_bool_t
      name: value
      desc: "[in] boolean type value"
--- #--------------------------------------------------------------------------
type: function
desc: "Launch a kernel with custom launch properties"
class: $xEnqueue
name: KernelLaunchCustomExp
ordinal: "0"
analogue:
    - "**cuLaunchKernelEx**"
details:
    - "Launches the kernel using the specified launch properties"
    - "Consult the appropriate adapter driver documentation for details of adapter specific behavior and native error codes that may be returned."
params:
    - type: $x_queue_handle_t
      name: hQueue
      desc: "[in] handle of the queue object"
    - type: $x_kernel_handle_t
      name: hKernel
      desc: "[in] handle of the kernel object"
    - type: uint32_t
      name: workDim
      desc: "[in] number of dimensions, from 1 to 3, to specify the global and work-group work-items"
    - type: const size_t*
      name: pGlobalWorkSize
      desc: "[in] pointer to an array of workDim unsigned values that specify the number of global work-items in workDim that will execute the kernel function"
    - type: const size_t*
      name: pLocalWorkSize
      desc: "[in][optional] pointer to an array of workDim unsigned values that specify the number of local work-items forming a work-group that will execute the kernel function. If nullptr, the runtime implementation will choose the work-group size."
    - type: const $x_base_desc_t*
      name: kernelLaunchDesc
      desc: "[in] Descriptor of a custom kernel launch"
    - type: uint32_t
      name: numEventsInWaitList
      desc: "[in] size of the event wait list"
    - type: const ur_event_handle_t*
      name: phEventWaitList
      desc: "[in][optional][range(0, numEventsInWaitList)] pointer to a list of events that must be complete before the kernel execution. If nullptr, the numEventsInWaitList must be 0, indicating that no wait event. "
    - type: ur_event_handle_t*
      name: phEvent
      desc: "[out][optional] return an event object that identifies this particular kernel execution instance."
returns:
    - $X_RESULT_SUCCESS
    - $X_RESULT_ERROR_UNINITIALIZED
    - $X_RESULT_ERROR_DEVICE_LOST
    - $X_RESULT_ERROR_ADAPTER_SPECIFIC
    - $X_RESULT_ERROR_INVALID_NULL_HANDLE:
        - "NULL == hQueue"
        - "NULL == hKernel"
    - $X_RESULT_ERROR_INVALID_NULL_POINTER:
        - "NULL == pGlobalWorkSize"
    - $X_RESULT_ERROR_INVALID_QUEUE
    - $X_RESULT_ERROR_INVALID_KERNEL
    - $X_RESULT_ERROR_INVALID_EVENT
    - $X_RESULT_ERROR_INVALID_EVENT_WAIT_LIST:
        - "phEventWaitList == NULL && numEventsInWaitList > 0"
        - "phEventWaitList != NULL && numEventsInWaitList == 0"
        - "If event objects in phEventWaitList are not valid events."
    - $X_RESULT_ERROR_IN_EVENT_LIST_EXEC_STATUS:
        - "An event in phEventWaitList has $X_EVENT_STATUS_ERROR"
    - $X_RESULT_ERROR_INVALID_WORK_DIMENSION
    - $X_RESULT_ERROR_INVALID_WORK_GROUP_SIZE
    - $X_RESULT_ERROR_INVALID_VALUE
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_RESOURCES

